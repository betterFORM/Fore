<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xf="http://www.w3.org/2002/xforms">
    <head>
        <title></title>
        <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
        <script src="../bower_components/webcomponentsjs/webcomponents-lite.min.js"></script>
        <script src="/betterform/bower_components/jquery/dist/jquery.js" type="text/javascript"></script>
        <script src="resources/js/jquery.atmosphere.js"/>

        <link rel="import" href="../custom-elements/fore-bridge/fore-bridge.html"/>
        <link rel="import" href="../custom-elements/fore-xf-input/fore-xf-input.html"/>

    </head>
    <body>
        <xf:model>
            <xf:instance>
                <data xmlns="">
                    <foo>bar</foo>
                </data>
            </xf:instance>
            <xf:bind ref="foo" readonly="string-length(.) > 5"/>
        </xf:model>

        <fore-bridge transport="websocket" xfSession="{$sessionKey}"></fore-bridge>
        <h1>Simple xf input example</h1>
        <p>
            for-xf-* components use the server-side approach of betterFORM and provide a 'legacy mode' - the processing
            and syntax of the xforms model does not change. Further, XPath is used for binding but instead of using
            xf:* controls annotated HTML elements are used.
        </p>
        <p>
            Shows 2 controls bound to the same node. These should update both when
            one of them is changed.
        </p>
        <p>
            Further uses a readonly constraint allowing a max of 5 chars as input. Should become readonly if more than 5 chars are typed in.
        </p>
        <!--  eventually add a global routine to extend native controls to its custom elements counterparts to
        avoid the need to write 'is' -->
        <label for="ernie">Ernie</label>
        <input id="ernie" type="text" is="fore-xf-input" ref="instance()/foo"/>

        <label for="bert">Bert</label>
        <input id="bert" type="text" is="fore-xf-input" ref="instance()/foo"/>
    </body>
</html>



